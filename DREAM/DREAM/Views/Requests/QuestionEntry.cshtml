@model DREAM.Models.QuestionViewModel
@using DREAM.Helpers

<li class="questionItem">
    @using (Html.BeginCollectionItem("Questions"))
    {
        <div class="row">
            <div class="span12">
                <h4>Question @Html.ValueFor(m => m.Index)</h4>
                
                @Html.HiddenFor(m => m.QuestionID)
                @Html.HiddenFor(m => m.Delete)
            </div>
        </div>

        <div class="row">
            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(m => m.QuestionTypeStringID)
                    <div class="controls">
                        @Html.DropDownListFor(m => m.QuestionTypeStringID, (IEnumerable<SelectListItem>)ViewData["QuestionTypeList"])
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.QuestionText)
                    <div class="controls">
                        @Html.TextAreaFor(m => m.QuestionText, new { @class = "span5", rows = "10" })
                        <div class="span5">
                            @Html.ValidationMessageFor(m => m.QuestionText)
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.SpecialNotes)
                    <div class="controls">
                        @Html.TextAreaFor(m => m.SpecialNotes, new { @class = "span5", rows = "5" })
                        <div class="span5">
                            @Html.ValidationMessageFor(m => m.SpecialNotes)
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.TimeTaken)
                    <div class="controls">
                        @Html.EditorFor(m => m.TimeTaken)
                        <div class="span5">
                            @Html.ValidationMessageFor(m => m.TimeTaken)
                        </div>
                    </div>
                </div>
            </div>

            <div class="span6">
                <div class="control-group">
                    @Html.LabelFor(m => m.TumourGroupStringID)
                    <div class="controls">
                        @Html.DropDownListFor(m => m.TumourGroupStringID, (IEnumerable<SelectListItem>)ViewData["TumourGroupList"])
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.Response)
                    <div class="controls">
                        @Html.TextAreaFor(m => m.Response, new { @class = "span5", rows = "10" })
                        <div class="span5">
                            @Html.ValidationMessageFor(m => m.Response)
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.Severity)
                    <div class="controls">
                        @Html.DropDownListFor(m => m.Severity, (IEnumerable<SelectListItem>)ViewData["SeverityList"])
                        <div class="span5">
                            @Html.ValidationMessageFor(m => m.Severity)
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.Probability)
                    <div class="controls">
                        @Html.DropDownListFor(m => m.Probability, (IEnumerable<SelectListItem>)ViewData["ProbabilityList"])
                        <div class="span5">
                            @Html.ValidationMessageFor(m => m.Probability)
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(m => m.Impact)
                    <div class="controls">
                        @Html.TextBoxFor(m => m.Impact, new { disabled = "disabled", @readonly = "readonly" })
                    </div>
                </div>
            </div>
        </div>
        
        <h5 style="display: inline;">Keywords</h5>
        <a href="javascript:void(0);" class="addNewKeyword">Add</a>

        <ul class="keywordValues" style="list-style-type: none">
            @if (Model == null || Model.Keywords == null || Model.Keywords.Count == 0)
            {
                @Html.Partial("KeywordEntry", new DREAM.Models.KeywordViewModel())
            }
            else
            {
                foreach (DREAM.Models.KeywordViewModel value in Model.Keywords)
                {
                    @Html.Partial("KeywordEntry", value)
                }
            }
        </ul>
        
        <h5 style="display: inline;">References</h5>
        <a href="javascript:void(0);" class="addNewReference">Add</a>

        <ul class="referenceValues" style="list-style-type: none">
            @if (Model == null || Model.References == null || Model.References.Count == 0)
            {
                @Html.Partial("ReferenceEntry", new DREAM.Models.ReferenceViewModel())
            }
            else
            {
                foreach (DREAM.Models.ReferenceViewModel value in Model.References)
                {
                    @Html.Partial("ReferenceEntry", value)
                }
            }
        </ul>

        @Html.ValidationSummary(true)

    }
</li>
