@model DREAM.Models.RequestViewModel

@{
    ViewBag.Title = "Add";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="span12">
            <h2>Create a Request</h2>

            <hr />

            @Html.LabelFor(m => m.RequesterTypeStringID)
            @Html.DropDownListFor(m => m.RequesterTypeStringID, (IEnumerable<SelectListItem>)ViewData["RequesterTypeList"], new { id = "req-type" })

            <hr />
        </div>

        <div class="span6">
            <h4>Caller</h4>

            <div class="control-group">
                @Html.LabelFor(m => m.CallerFirstName)
                <div class="controls">
                    @Html.TextBoxFor(m => m.CallerFirstName, new { id = "caller-first" })
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.CallerFirstName)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.CallerLastName)
                <div class="controls">
                    @Html.TextBoxFor(m => m.CallerLastName, new { id = "caller-last" })
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.CallerLastName)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.CallerEmail)
                <div class="controls">
                    @Html.EditorFor(m => m.CallerEmail)
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.CallerEmail)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.CallerPhoneNumber)
                <div class="controls">
                    @Html.EditorFor(m => m.CallerPhoneNumber)
                    <div class="span5">
                       @Html.ValidationMessageFor(m => m.CallerPhoneNumber)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.CallerRegionStringID)
                <div class="controls">
                    @Html.DropDownListFor(m => m.CallerRegionStringID, (IEnumerable<SelectListItem>)ViewData["RegionList"])
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.CallerRegionStringID)
                    </div>
                </div>
            </div>
        </div>

        <div class="span6">
            <h4>Patient</h4>
            @Html.HiddenFor(m => m.PatientID)

            <div class="control-group">
                @Html.LabelFor(m => m.PatientFirstName)
                <div class="controls">
                    @Html.TextBoxFor(m => m.PatientFirstName, new { id = "patient-first" })
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.PatientFirstName)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.PatientLastName)
                <div class="controls">
                    @Html.TextBoxFor(m => m.PatientLastName, new { id = "patient-last" })
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.PatientLastName)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.PatientAgencyID)
                <div class="controls">
                    @Html.EditorFor(m => m.PatientAgencyID)
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.PatientAgencyID)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.PatientGender)
                <div class="controls">
                    @Html.DropDownListFor(m => m.PatientGender, (IEnumerable<SelectListItem>)ViewData["GenderList"])
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.PatientGender)
                    </div>
                </div>
            </div>

            <br />

            <div class="control-group">
                @Html.LabelFor(m => m.PatientAge)
                <div class="controls">
                    @Html.EditorFor(m => m.PatientAge)
                    <div class="span5">
                        @Html.ValidationMessageFor(m => m.PatientAge)
                    </div>
                </div>
            </div>

        </div>

        <div class="span12">
            <hr />

            @Html.ValidationSummary()

            <p>
                <button type="submit" class="btn btn-large btn-primary span4">Create Request</button>
            </p>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/themes/base/css")

    <script type="text/javascript">
        var patient = false;

        $(document).ready(function () {
            $('#req-type').change(function () {
                if ($('#req-type').children("option:selected").text() == "Patient") {
                    patient = true;
                    $('#patient-first').val($('#caller-first').val());
                    $('#patient-last').val($('#caller-last').val());
                }
                else patient = false;
            });

            $('#caller-first').keyup(function () {
                if (patient == true)
                    $('#patient-first').val($('#caller-first').val());
            });

            $('#caller-last').keyup(function () {
                if (patient == true)
                    $('#patient-last').val($('#caller-last').val());
            });

            $('#patient-first').keyup(function () {
                if (patient == true)
                    $('#caller-first').val($('#patient-first').val());
            });

            $('#patient-last').keyup(function () {
                if (patient == true)
                    $('#caller-last').val($('#patient-last').val());
            });

            $("#PatientAgencyID").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Autocomplete/Patient", type: "POST", dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: "{ \"agencyId\": \"" + request.term + "\" }",
                        async: true,
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (result) {
                            response(null);
                        }
                    });
                },
                delay: 500,
                minLength: 2,
                select: function (event, ui) {
                    $("input[name=PatientAgencyID]").val(ui.item.AgencyID);
                    $("input[name=PatientFirstName]").val(ui.item.FirstName);
                    $("input[name=PatientLastName]").val(ui.item.LastName);
                    $("input[name=PatientGender]").val(ui.item.Gender);
                    $("input[name=PatientAge]").val(ui.item.Age);
                },
            });
        });
    </script>
}
