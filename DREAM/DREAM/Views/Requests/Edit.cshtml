@model DREAM.Models.RequestViewModel
@using DREAM.Models

@{
    ViewBag.Title = "Edit Request";
}

<h2>Edit Request</h2>

@if (ViewBag.IsLocked)
{
    <div class="editor-label">
        This request is currently locked and cannot be edited.
    </div>
}

@Scripts.Render("~/bundles/jquery")

@if (!ViewBag.IsLocked)
{
    using (Html.BeginForm())
    {

    @Html.AntiForgeryToken()

    <fieldset>
        <legend>Request</legend>

        <table>
            <tr>
                <td>
                    @Html.LabelFor(model => model.RequestID)
                </td>
                <td>
                    @Html.HiddenFor(m => m.RequestID)
                    @Html.DisplayTextFor(model => model.RequestID)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.RequesterTypeStringID)
                </td>
                <td>
                    @Html.DropDownListFor(m => m.RequesterTypeStringID, (IEnumerable<SelectListItem>)ViewData["RequesterTypeList"])
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.CreationTime)
                </td>
                <td>
                    @Html.HiddenFor(m => m.CreationTime)
                    @Html.DisplayTextFor(model => model.CreationTime)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.CreatedBy)
                </td>
                <td>
                    @Html.HiddenFor(m => m.CreatedBy)
                    @Html.DisplayTextFor(model => model.CreatedBy)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.CompletionTime)
                </td>
                <td>
                    @Html.HiddenFor(m => m.CompletionTime)
                    @Html.DisplayTextFor(model => model.CompletionTime)
                </td>
            </tr>

            <tr>
                <td>
                    @Html.LabelFor(model => model.ClosedBy)
                </td>
                <td>
                    @Html.HiddenFor(m => m.ClosedBy)
                    @Html.DisplayTextFor(model => model.ClosedBy)
                </td>
            </tr>
        </table>

        <h3>Caller Data</h3>

        <div style="border: solid; border-width: 1px; margin: 5px">
            <fieldset>
                <legend>Caller</legend>

                @Html.HiddenFor(m => m.CallerID)

                <table>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.CallerFirstName)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.CallerFirstName)
                            @Html.ValidationMessageFor(m => m.CallerFirstName)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(m => m.CallerLastName)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.CallerLastName)
                            @Html.ValidationMessageFor(m => m.CallerLastName)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(m => m.CallerEmail)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.CallerEmail)
                            @Html.ValidationMessageFor(m => m.CallerEmail)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(m => m.CallerPhoneNumber)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.CallerPhoneNumber)
                            @Html.ValidationMessageFor(m => m.CallerPhoneNumber)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(m => m.CallerRegionStringID)
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m.CallerRegionStringID, (IEnumerable<SelectListItem>)ViewData["RegionList"])
                            @Html.ValidationMessageFor(m => m.CallerRegionStringID)
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <h3>Patient Data</h3>

        <div style="border: solid; border-width: 1px; margin: 5px">
            <fieldset>
                <legend>Patient</legend>

                @Html.HiddenFor(m => m.PatientID)

                <table>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.PatientFirstName)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.PatientFirstName)
                            @Html.ValidationMessageFor(m => m.PatientFirstName)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(m => m.PatientLastName)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.PatientLastName)
                            @Html.ValidationMessageFor(m => m.PatientLastName)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.PatientAgencyID)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.PatientAgencyID)
                            @Html.ValidationMessageFor(m => m.PatientAgencyID)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.PatientGender)
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m.PatientGender, (IEnumerable<SelectListItem>)ViewData["GenderList"])
                            @Html.ValidationMessageFor(m => m.PatientGender)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.PatientAge)
                        </td>
                        <td>
                            @Html.EditorFor(m => m.PatientAge)
                            @Html.ValidationMessageFor(m => m.PatientAge)
                        </td>
                    </tr>
                </table>
            </fieldset>
        </div>

        <h3>Questions</h3>

        <!--
        <div style="border: solid; border-width: 1px; margin: 5px">
            @*Html.EditorFor(m => m.Questions) *@
        </div>
        -->
        
        @if (Model.Questions == null || Model.Questions.Count == 0)
        {
            <p>None.</p>
        }
        <div style="border: solid; border-width: 1px; margin: 5px">
            <ul id="questionEditor" style="list-style-type: none">
                @if (Model.Questions != null)
                {
                    foreach (QuestionViewModel qv in Model.Questions)
                    {
                        Html.RenderPartial("QuestionEntry", qv);
                    }
                }
            </ul>
            <a id="addQuestion" href="#">Add another question</a>
        </div>
        @Html.HiddenFor(m => m.QuestionCount)

        <script type="text/javascript">
            $(function () {
                $("#addQuestion").click(function () {
                    var count = $("input[name=QuestionCount]:hidden");
                    var idx = count.val();
                    var next = +idx + 1;
                    count.val(next);
                    $.get('/Requests/QuestionEntryItem/' + idx, function (template) {
                        $("#questionEditor").append(template);
                    });
                });
            });
        </script>

        @*<script>
           $(function () {
               $(".deleteQuestion").click(function () {
                   var par = $(this).parent();
                   var deleted = par.find("input[name$=Delete]:hidden");
                   console.log(par);
                   console.log(deleted);
                   deleted.val('True');
                   par.hide(0.5);
               });
           });
        </script>*@

        @Html.ValidationSummary(true)

        <p>
            <input type="submit" value="Save" />
        </p>
        <p>
            @Html.ActionLink("Export", "Export", new { reqId = Model.RequestID })
        </p>
        <p>
            @Html.ActionLink("Audit Request (Unsaved changes will be lost)", "Index", "LogsAdmin", new { request = Model.RequestID }, "")
        </p>
    </fieldset>
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
