@model DREAM.Models.ChartModel
@using DREAM.Helpers

<li>
    @using (var scope = Html.BeginCollectionItem("Charts"))
    {
        <div class="row">
            <div class="span3">
                @Html.LabelFor(model => model.Name)

                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>

            <div class="span2">
                @Html.LabelFor(model => model.ObjectTypeName)

                @Html.DropDownListFor(model => model.ObjectTypeName, (IEnumerable<SelectListItem>)ViewData["ObjectTypeList"], new { @class = "objectTypeSelector span2" })
                @Html.ValidationMessageFor(model => model.ObjectTypeName)
            </div>

            <div class="span2">
                @Html.LabelFor(model => model.StartDate)

                @Html.TextBoxFor(model => model.StartDate, new { @class = "date span2" })
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
            
            <div class="span2">
                @Html.LabelFor(model => model.TimeRange)

                @Html.DropDownListFor(model => model.TimeRange, (IEnumerable<SelectListItem>)ViewData["TimeRangeList"], new { @class = "span2" })
                @Html.ValidationMessageFor(model => model.TimeRange)
            </div>
        </div>

        <div class="row">
            <div class="span2">
                @Html.LabelFor(model => model.Granularity)

                @Html.DropDownListFor(model => model.Granularity, (IEnumerable<SelectListItem>)ViewData["TimeRangeList"], new { @class = "span2" })
                @Html.ValidationMessageFor(model => model.Granularity)
            </div>

            <div class="span3">
                @Html.LabelFor(model => model.ChartType)

                @Html.DropDownListFor(model => model.ChartType, (IEnumerable<SelectListItem>)ViewData["ChartTypeList"], new { @class = "span3" })
                @Html.ValidationMessageFor(model => model.ChartType)
            </div>

            <div class="span2">
                @Html.LabelFor(model => model.Comparison)

                @Html.DropDownListFor(model => model.Comparison, (IEnumerable<SelectListItem>)ViewData["ComparisonList"], new { @class = "span2" })
                @Html.ValidationMessageFor(model => model.Comparison)
            </div>

            <div class="span3">
                @Html.LabelFor(model => model.Stratification)

                @if (Model != null && Model.ObjectTypeName == "Request")
                {
                    @Html.DropDownListFor(model => model.Stratification, (IEnumerable<SelectListItem>) ViewData["RequestStratificationList"],
                        new { @class = "stratificationSelector span3" })
                }
                else if (Model != null && Model.ObjectTypeName == "Question")
                {
                    @Html.DropDownListFor(model => model.Stratification, (IEnumerable<SelectListItem>) ViewData["QuestionStratificationList"],
                        new { @class = "stratificationSelector span3" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.Stratification, (IEnumerable<SelectListItem>)new List<SelectListItem>(),
                        new { @class = "stratificationSelector span3", disabled = "" })
                }
                @Html.ValidationMessageFor(model => model.Stratification)
            </div>
        </div>

        <div class="row">
            <div class="span12">
                <h4>
                    Values
                    <a href="javascript:void(0);" class="addNewValue"><i class="icon-plus-sign"></i></a>
                </h4>
            </div>
        </div>

        <div class="offset1">
            <ul class="chartValues" style="list-style-type: none">
                @{
        ViewDataDictionary extraDict = new ViewDataDictionary(ViewData);
        extraDict.Add("chart", Model);
                }
                @if (Model == null || Model.Values == null || Model.Values.Count == 0)
                {
                    @Html.Partial("ChartValueModel", null, extraDict);
                }
                else
                {
                    foreach (DREAM.Models.ChartValueModel value in Model.Values)
                    {
                        @Html.Partial("ChartValueModel", value, extraDict);
                    }
                }
            </ul>
        </div>
    }
</li>